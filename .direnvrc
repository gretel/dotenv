# https://github.com/gretel/dotfiles
# https://github.com/zimbatm/direnv

### primary versions to use
local py_version=2.7.11
local rb_version=2.3.1
local hb_token=""
local local_path=/usr/local

# use_ruby() {
#   local ruby_ver=$1
#   local ruby_dir=$2

#   export GEM_HOME=$HOME/.gem/ruby/$ruby_ver
#   export GEM_PATH=$HOME/.gem/ruby/$ruby_ver
#   export BUNDLE_BIN=$HOME/.gem/ruby/$ruby_ver/bin

#   path_add MANPATH "$ruby_dir/share/man"
#   PATH_add "$ruby_dir/bin"
#   PATH_add "$GEM_HOME/bin"
#   PATH_add "$BUNDLE_BIN"
# }

use_chruby() {
  local ver=$1
  source /usr/local/share/chruby/chruby.sh
  source /usr/local/share/chruby/auto.sh
  chruby $ver
}

# use_python() {
#  local python_ver=$1
#  local python_dir=$2

#  local python_bin=$python_dir/bin
#  local python_shims=$HOME/.pyenv/shims

#  export PYENV_ROOT=$HOME/.pyenv
#  export PYENV_VERSION=$python_ver

#  path_add MANPATH "$python_dir/share/man"
#  PATH_add "$python_shims"
#  PATH_add "$python_bin"
# }

use_pyenv() {
  local ver=$1
  pyenv local $ver
}

use_ansible_dev() {
  local location=$1
  if test -d "$location"; then
    export ANSIBLE_HOME=$location
    source "$location/hacking/env-setup" > /dev/null
  else
    echo Ansible could not be found at "$location"!
    exit 1
  fi
}

use_go() {
  PATH_add "/usr/local/opt/go/libexec/bin"
  PATH_add "$HOME/.go/bin"

  export GOPATH=$HOME/.go
}

use_homebrew() {
  PATH_add "$local_path/bin"
  PATH_add "$local_path/sbin"

  export HOMEBREW_PATH=$local_path
  export HOMEBREW_GITHUB_API_TOKEN=$hb_token
}

use_node() {
  export NODE_HOME=$local_path
  export NODE_PATH=$local_path/lib/node_modules
}

use_sublime() {
  export EDITOR="subl -w -n"
}

use_atom() {
  export EDITOR="atom -n"
}

### encoding
export LC_ALL=en_US.UTF-8

### enable use
# use atom
use sublime
use homebrew
use go
use node
use pyenv $py_version
# use python $py_version
# use_ansible_dev "${HOME}/Sync/prjcts/ansible"
use chruby $rb_version
# use ruby $rb_version
