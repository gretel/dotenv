#!/bin/bash
# -*- mode: bash; coding:utf-8; tab-width: 2; indent-tabs-mode: nil; -*-
#
# tom hensel <github@jitter.eu> 2016
# https://gist.github.com/gretel/dc8c38fcf979f85c8d643aab045b8c46
#
# super leightweight bash prompt done by a fish user:
#   * based on https://github.com/cesarkawakami/pandaprompt
#   * disjointed the poor panda.
#
# requires:
#   * bash (well, yes)
#   * git
#
# supports prompting:
#   * active python virtualenv
#   * git state
#   * timestamp
#   * return value of last command
#   * in adjustable colors (wow!) 
#
# include this file in `.bashrc`:
#
#   source "$HOME/.bash_prompt"
#
# and you should feel the ease..
#

## RED="\[\033[0;31m\]"
## DYELLOW="\[\033[0;33m\]"
YELLOW="\[\033[1;33m\]"
GREEN="\[\033[0;32m\]"
BLUE="\[\033[1;34m\]"
DBLUE="\[\033[0;34m\]"
LIGHT_RED="\[\033[1;31m\]"
## LIGHT_GREEN="\[\033[1;32m\]"
WHITE="\[\033[1;37m\]"
LIGHT_GRAY="\[\033[0;37m\]"
PURPLE="\[\033[0;35m\]"
## CYAN="\[\033[0;36m\]"
COLOR_NONE="\[\e[0m\]"

DATE_FMT="+%H:%M.%S"

function set_prompt () {
  local ret="$?"
  if test "$ret" -eq "0"; then
    RET_VAL=" (${GREEN}$ret${COLOR_NONE})"
  else
    RET_VAL=" (${LIGHT_RED}$ret${COLOR_NONE})"
  fi
  if test -z "$VIRTUAL_ENV"; then
    PY_VENV=""
  else
    PY_VENV=" ${PURPLE}{$(basename "$VIRTUAL_ENV")}${COLOR_NONE}"
  fi
  if git rev-parse --git-dir > /dev/null 2>&1; then
    local rev_parse
    rev_parse="$(git rev-parse --abbrev-ref HEAD 2> /dev/null)"
    if test "$rev_parse" != "HEAD"; then
      GIT_STATE=" [${BLUE}${rev_parse}${COLOR_NONE}${COLOR_NONE}]"
    else
      GIT_STATE=" [${YELLOW}<detached>${COLOR_NONE}${COLOR_NONE}]"
    fi
  else
    GIT_STATE=""
  fi
  PREFIX="${LIGHT_GRAY}\u@\h${WHITE}:\w${COLOR_NONE}"
  DATE=" ${LIGHT_GRAY}$(date $DATE_FMT)${COLOR_NONE}"
  export PS1="${PREFIX}${GIT_STATE}${PY_VENV}${DBLUE}${DATE}${RET_VAL}\$ "
}

PROMPT_COMMAND=set_prompt
#